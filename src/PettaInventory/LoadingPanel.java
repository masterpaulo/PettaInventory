/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package PettaInventory;

import java.io.BufferedReader;
import java.io.FileReader;
/**
 *
 * @author MasterPaulo
 */
public class LoadingPanel extends javax.swing.JPanel {
    
    public LoadingPanel() {
        initComponents();
        new Thread(new load()).start();
    }

    public static int setWait(){
        BufferedReader reader;
        int lines = 0;
        try{
        reader = new BufferedReader(new FileReader("Items.txt"));
        while (reader.readLine() != null) lines++;
        reader.close();
        }catch(Exception e){
        return 0;
        }
        return lines;

    }
    static class load implements Runnable{
        public void run(){
            PettaInventory.cashier = new MainFrame("Petta Inventory");
            PettaInventory.cashier.preparation();
            PettaInventory.cashier.setLocationRelativeTo(null);
            int rate = setWait();
            if(rate!=0){
                int x =(1000/rate/2);
                int wait = (x>0)? x:1;
                //loading phase :D
                for(int i=0;i<=1000;i+=wait){
                    progressBar.setValue(i);
                    progressBar.repaint();
                    if(i%200==0)
                        loadItemsLabel.setText(choose(i));
                    try{
                    Thread.sleep(2);
                    }catch(Exception e){}
                }
            }
            else{
                loadItemsLabel.setText("No items found.");
                try{
                    Thread.sleep(500);
                }catch(Exception x){};
            }
            //a little pause
            try{
            Thread.sleep(500);
            }catch(Exception e){}
            
            //show and tell
            PettaInventory.cashier.setVisible(true);
            PettaInventory.authenticater.dispose();
        }

    }
    
    public static String choose(int i){
        String str = "Loading items";
        switch((i/200)%3){
            case 0: return str+".";
            case 1: return str+"..";
            case 2: return str+"...";
            default: return "";
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        loadItemsLabel = new javax.swing.JLabel();
        progressBar = new javax.swing.JProgressBar();
        image = new javax.swing.JLabel();

        setMinimumSize(new java.awt.Dimension(600, 400));
        setPreferredSize(new java.awt.Dimension(600, 400));
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        setLayout(null);

        loadItemsLabel.setForeground(new java.awt.Color(255, 255, 255));
        loadItemsLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        loadItemsLabel.setText("Loading items...");
        add(loadItemsLabel);
        loadItemsLabel.setBounds(270, 260, 110, 14);

        progressBar.setForeground(new java.awt.Color(51, 255, 51));
        progressBar.setMaximum(1000);
        progressBar.setStringPainted(true);
        progressBar.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                progressBarPropertyChange(evt);
            }
        });
        add(progressBar);
        progressBar.setBounds(230, 280, 160, 19);

        image.setForeground(new java.awt.Color(255, 255, 255));
        image.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/cover.jpg"))); // NOI18N
        image.setText("Enter Password");
        add(image);
        image.setBounds(0, 0, 600, 400);
    }// </editor-fold>//GEN-END:initComponents

    private void progressBarPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_progressBarPropertyChange

    }//GEN-LAST:event_progressBarPropertyChange

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown

    }//GEN-LAST:event_formComponentShown

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel image;
    private static javax.swing.JLabel loadItemsLabel;
    private static javax.swing.JProgressBar progressBar;
    // End of variables declaration//GEN-END:variables
}
